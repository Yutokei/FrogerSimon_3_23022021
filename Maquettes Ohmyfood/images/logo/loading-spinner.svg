<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   xmlns:osb="http://www.openswatchbook.org/uri/2009/osb"
   xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmlns:cc="http://creativecommons.org/ns#"
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
   xmlns:svg="http://www.w3.org/2000/svg"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   width="210mm"
   height="297mm"
   viewBox="0 0 210 297"
   version="1.1"
   id="svg8"
   inkscape:version="1.0.2-2 (e86c870879, 2021-01-15)"
   sodipodi:docname="loading-spinner.svg">
  <title
     id="title892">OhMyFood-load</title>
  <defs
     id="defs2">
    <linearGradient
       id="linearGradient3082"
       osb:paint="solid">
      <stop
         style="stop-color:#9356dc;stop-opacity:1;"
         offset="0"
         id="stop3080" />
    </linearGradient>
    <linearGradient
       id="linearGradient2992"
       osb:paint="solid">
      <stop
         style="stop-color:#9356dc;stop-opacity:1;"
         offset="0"
         id="stop2990" />
    </linearGradient>
    <linearGradient
       id="linearGradient2943"
       osb:paint="solid">
      <stop
         style="stop-color:#9356dc;stop-opacity:1;"
         offset="0"
         id="stop2941" />
    </linearGradient>
    <linearGradient
       id="linearGradient3394"
       osb:paint="solid">
      <stop
         style="stop-color:#9356dc;stop-opacity:1;"
         offset="0"
         id="stop3392" />
    </linearGradient>
    <linearGradient
       id="linearGradient3242"
       osb:paint="solid">
      <stop
         style="stop-color:#101010;stop-opacity:1;"
         offset="0"
         id="stop3240" />
    </linearGradient>
    <linearGradient
       id="linearGradient3236"
       osb:paint="solid">
      <stop
         style="stop-color:#99e2d0;stop-opacity:1;"
         offset="0"
         id="stop3234" />
    </linearGradient>
    <linearGradient
       id="linearGradient2985"
       osb:paint="solid">
      <stop
         style="stop-color:#2b3440;stop-opacity:1;"
         offset="0"
         id="stop2983" />
    </linearGradient>
    <linearGradient
       id="linearGradient2933"
       osb:paint="solid">
      <stop
         style="stop-color:#c44dc4;stop-opacity:0.75686276;"
         offset="0"
         id="stop2931" />
    </linearGradient>
    <linearGradient
       id="linearGradient2892"
       osb:paint="solid">
      <stop
         style="stop-color:#ff79da;stop-opacity:0.58039218;"
         offset="0"
         id="stop2890" />
    </linearGradient>
    <linearGradient
       id="linearGradient2884"
       osb:paint="solid">
      <stop
         style="stop-color:#99e2d0;stop-opacity:0.56078434;"
         offset="0"
         id="stop2882" />
    </linearGradient>
  </defs>
  <sodipodi:namedview
     id="base"
     pagecolor="#ffffff"
     bordercolor="#666666"
     borderopacity="1.0"
     inkscape:pageopacity="0.0"
     inkscape:pageshadow="2"
     inkscape:zoom="0.7"
     inkscape:cx="298.50062"
     inkscape:cy="550.70231"
     inkscape:document-units="mm"
     inkscape:current-layer="layer3"
     inkscape:document-rotation="0"
     showgrid="false"
     inkscape:window-width="1920"
     inkscape:window-height="1017"
     inkscape:window-x="-8"
     inkscape:window-y="-8"
     inkscape:window-maximized="1" />
  <metadata
     id="metadata5">
    <rdf:RDF>
      <cc:Work
         rdf:about="">
        <dc:format>image/svg+xml</dc:format>
        <dc:type
           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
        <dc:title>OhMyFood-load</dc:title>
      </cc:Work>
    </rdf:RDF>
  </metadata>
  <g
     inkscape:groupmode="layer"
     id="layer2"
     inkscape:label="Calque 2"
     style="display:inline">
    <ellipse
       style="opacity:1;fill:#99e2d0;fill-opacity:1;stroke:#800080;stroke-width:0.784666;stroke-miterlimit:4;stroke-dasharray:none"
       id="path3835"
       cx="102.05357"
       cy="165.36458"
       rx="73.142586"
       ry="73.331566" />
  </g>
  <g
     inkscape:label="Calque 1"
     inkscape:groupmode="layer"
     id="layer1"
     style="display:inline">
    <rect
       style="fill:#1d1d3a;fill-opacity:1;fill-rule:evenodd;stroke-width:0.126248"
       id="rect10"
       width="6.7867746"
       height="75.919449"
       x="135.55963"
       y="89.142395"
       ry="23.619389"
       rx="1.7319149"
       transform="matrix(0.91720712,0.39841072,-0.34493245,0.93862751,0,0)" />
    <rect
       style="fill:#ff79da;fill-opacity:1;fill-rule:evenodd;stroke-width:0.142132"
       id="rect12"
       width="5.4788747"
       height="20.648285"
       x="133.24257"
       y="60.517071"
       rx="1.6977526"
       ry="20.648285"
       transform="matrix(0.89316349,0.44973211,-0.37346952,0.92764245,0,0)" />
    <rect
       style="fill:#ff79da;fill-opacity:1;fill-rule:evenodd;stroke-width:0.142132"
       id="rect14"
       width="5.4788737"
       height="20.648285"
       x="139.2477"
       y="60.520527"
       rx="1.6977525"
       ry="20.648285"
       transform="matrix(0.89316349,0.44973211,-0.37346952,0.92764245,0,0)" />
    <rect
       style="fill:#ff79da;fill-opacity:1;fill-rule:evenodd;stroke-width:0.142132"
       id="rect16"
       width="5.4788747"
       height="20.648285"
       x="146.11761"
       y="60.568409"
       rx="1.6977526"
       ry="20.648285"
       transform="matrix(0.89316349,0.44973211,-0.37346952,0.92764245,0,0)" />
    <rect
       style="fill:#1d1d3a;fill-opacity:1;fill-rule:evenodd;stroke-width:0.147014"
       id="rect18"
       width="17.798758"
       height="5.1149716"
       x="132.18703"
       y="89.478607"
       rx="1.7956939"
       ry="5.1149716"
       transform="matrix(0.91952005,0.39304311,-0.36626802,0.9305094,0,0)" />
    <rect
       style="fill:#1d1d3a;fill-opacity:1;fill-rule:evenodd;stroke-width:0.0885798"
       id="rect20"
       width="11.116667"
       height="43.352348"
       x="115.6619"
       y="166.48959"
       rx="1.2691182"
       ry="2.627414" />
    <rect
       style="fill:#ff79da;fill-opacity:1;fill-rule:evenodd;stroke-width:0.133493"
       id="rect24"
       width="9.6264601"
       height="39.386246"
       x="117.1521"
       y="127.10335"
       rx="1.0989914"
       ry="2.6858757" />
    <path
       style="fill:#ff79da;fill-opacity:1;stroke:none;stroke-width:0.432185"
       d="m 115.6619,166.48959 c -5.41595,-2.24063 -8.31412,-18.48824 -5.33471,-29.90722 1.55934,-5.97635 3.97739,-9.29222 6.77621,-9.29222 4.14996,0 7.44464,7.39715 7.92406,17.79095 0.59918,12.98989 -4.04639,23.60908 -9.36556,21.40849 z"
       id="path37" />
  </g>
  <g
     inkscape:groupmode="layer"
     id="layer3"
     inkscape:label="Calque 3"
     style="display:inline">
    <path
       d="m 69.230178,112.80027 c 1.97981,0 3.43555,0.42897 4.36723,1.28692 0.94623,0.85795 1.41936,1.98108 1.41936,3.3694 0,0.46796 -0.0582,0.99052 -0.17469,1.5677 -0.27659,1.27912 -0.79339,2.40225 -1.55038,3.36939 -0.75699,0.95154 -1.68866,1.69249 -2.79504,2.22286 -1.09179,0.51476 -2.27822,0.77215 -3.55928,0.77215 -2.02348,0 -3.5229,-0.42897 -4.49824,-1.28692 -0.96079,-0.87355 -1.44119,-2.02787 -1.44119,-3.46298 0,-0.48357 0.0582,-1.02174 0.17469,-1.6145 0.27659,-1.21673 0.80066,-2.29305 1.5722,-3.229 0.78611,-0.95154 1.73961,-1.68469 2.86053,-2.19946 1.13547,-0.53037 2.34375,-0.79555 3.62481,-0.79556 z m -0.0656,2.08247 c -0.30571,0 -0.63326,0.29638 -0.98264,0.88915 -0.33482,0.57717 -0.73514,1.67689 -1.20098,3.29919 -0.46584,1.62231 -0.69876,2.76103 -0.69876,3.4162 0,0.34318 0.0509,0.57716 0.15291,0.70195 0.10202,0.1092 0.24021,0.1638 0.4149,0.1638 0.3057,0.0312 0.61867,-0.24958 0.93894,-0.84234 0.33482,-0.59277 0.74972,-1.74709 1.24467,-3.46299 0.45128,-1.5131 0.67691,-2.61284 0.67691,-3.2992 0,-0.32757 -0.0509,-0.55376 -0.1529,-0.67855 -0.0873,-0.12479 -0.21848,-0.1872 -0.39305,-0.1872 z"
       fill="#101010"
       id="path2"
       style="display:inline;mix-blend-mode:difference;fill:#9356dc;fill-opacity:1;stroke-width:0.627882" />
    <path
       d="m 88.068668,121.9491 c -0.0291,0.0624 -0.0436,0.15599 -0.0436,0.28078 0,0.10919 0.0229,0.19497 0.0656,0.25738 0.0582,0.0624 0.1309,0.0936 0.21824,0.0936 0.17469,0 0.32027,-0.078 0.43672,-0.23399 0.13091,-0.17159 0.21825,-0.25738 0.26204,-0.25738 0.0729,0 0.13113,0.0546 0.17469,0.1638 0.0436,0.0936 0.0656,0.21058 0.0656,0.35098 0.0137,0.45237 -0.1238,0.89694 -0.4149,1.33372 -0.29115,0.42117 -0.72058,0.77215 -1.28832,1.05293 -0.55319,0.26518 -1.22283,0.39778 -2.00893,0.39778 -0.96079,0 -1.72506,-0.23399 -2.2928,-0.70196 -0.56775,-0.48357 -0.8589,-1.12313 -0.87345,-1.91868 0,-0.57717 0.13113,-1.22453 0.39305,-1.94209 l 1.201,-3.36938 c 0.0727,-0.20279 0.10912,-0.36659 0.10912,-0.49138 0,-0.20278 -0.0656,-0.35877 -0.19646,-0.46797 -0.11647,-0.12479 -0.26204,-0.18719 -0.43673,-0.18719 -0.27659,0 -0.56047,0.14039 -0.85162,0.42118 -0.27659,0.26518 -0.50222,0.70196 -0.67691,1.31032 v -0.0468 l -1.37569,4.74991 c -0.0436,0.18719 -0.0656,0.35098 -0.0656,0.49137 0,0.20279 0.0365,0.36658 0.10913,0.49137 0.0729,0.10919 0.17468,0.21838 0.3057,0.32758 0.10179,0.10919 0.17469,0.20279 0.21848,0.28078 0.0436,0.0624 0.0509,0.1482 0.0229,0.25739 -0.0727,0.20278 -0.21848,0.35097 -0.43673,0.44457 -0.21847,0.0936 -0.55318,0.14039 -1.00446,0.14039 h -4.97864 c -0.3785,0 -0.65509,-0.0624 -0.82978,-0.18719 -0.17469,-0.14039 -0.23291,-0.31978 -0.17469,-0.53816 0.0582,-0.1872 0.21114,-0.35099 0.45855,-0.49138 0.21848,-0.12479 0.40034,-0.27298 0.54592,-0.44457 0.14557,-0.17159 0.2693,-0.44457 0.3712,-0.81895 l 3.31909,-11.67588 c 0.0436,-0.14039 0.0656,-0.25738 0.0656,-0.35098 0,-0.17158 -0.0438,-0.31198 -0.13113,-0.42117 -0.0727,-0.10919 -0.17468,-0.21839 -0.30571,-0.32758 -0.14557,-0.12479 -0.25476,-0.23398 -0.32755,-0.32758 -0.0582,-0.0936 -0.0656,-0.21839 -0.0229,-0.37438 0.0873,-0.35878 0.5459,-0.67075 1.37567,-0.93594 0.82977,-0.26518 1.69595,-0.39778 2.59851,-0.39778 0.84434,0 1.46301,0.17159 1.85607,0.51477 0.4076,0.34318 0.61141,0.81115 0.61141,1.40392 0,0.34318 -0.0509,0.67856 -0.15291,1.00613 l -1.17915,4.11815 c 0.56773,-0.79555 1.16459,-1.34931 1.79056,-1.6613 0.64053,-0.31198 1.332,-0.46797 2.07442,-0.46797 0.88801,0 1.60132,0.28859 2.13995,0.86575 0.55318,0.57716 0.82977,1.32592 0.82977,2.24626 0,0.48357 -0.0727,0.95934 -0.21825,1.42731 z"
       fill="#101010"
       id="path4"
       style="display:inline;mix-blend-mode:difference;fill:#9356dc;fill-opacity:1;stroke-width:0.627882" />
    <path
       d="m 134.41823,121.85996 c -0.0291,0.0624 -0.0436,0.156 -0.0436,0.28078 0,0.1092 0.0229,0.19498 0.0656,0.25739 0.0582,0.0624 0.13091,0.0936 0.21825,0.0936 0.17469,0 0.32026,-0.078 0.43672,-0.23399 0.13091,-0.17159 0.21825,-0.25739 0.26204,-0.25739 0.0729,0 0.13113,0.0546 0.17468,0.16381 0.0436,0.0936 0.0656,0.21057 0.0656,0.35098 0.0137,0.45237 -0.12379,0.89694 -0.41489,1.33371 -0.29115,0.42118 -0.72058,0.77216 -1.28832,1.05294 -0.55318,0.26518 -1.22283,0.39777 -2.00893,0.39777 -0.96079,0 -1.72507,-0.23398 -2.29281,-0.70195 -0.56774,-0.48357 -0.85888,-1.12313 -0.87344,-1.91869 0,-0.57716 0.13113,-1.22452 0.39305,-1.94207 l 1.20099,-3.3694 c 0.0727,-0.20278 0.10913,-0.36657 0.10913,-0.49137 0,-0.20278 -0.0656,-0.35878 -0.19647,-0.46796 -0.11646,-0.1248 -0.26203,-0.1872 -0.43672,-0.1872 -0.24748,0 -0.50224,0.11698 -0.76428,0.35098 -0.26203,0.23399 -0.49495,0.60056 -0.69876,1.09973 l -1.20097,4.18835 c -0.0291,0.0624 -0.0436,0.15599 -0.0436,0.28078 0,0.10919 0.0229,0.19497 0.0656,0.25738 0.0582,0.0624 0.1309,0.0936 0.21847,0.0936 0.17469,0 0.32027,-0.078 0.43673,-0.23399 0.1309,-0.17159 0.21825,-0.25738 0.26203,-0.25738 0.0727,0 0.1309,0.0546 0.17469,0.1638 0.0436,0.0936 0.0656,0.21058 0.0656,0.35098 0.0137,0.45237 -0.1238,0.89694 -0.4149,1.33372 -0.29115,0.42117 -0.72058,0.77215 -1.28832,1.05293 -0.55318,0.26518 -1.22282,0.39778 -2.00893,0.39778 -0.96079,0 -1.72506,-0.23399 -2.29281,-0.70196 -0.56774,-0.48357 -0.85888,-1.12313 -0.87344,-1.91868 0,-0.57717 0.1309,-1.22452 0.39305,-1.94208 l 1.201,-3.36939 c 0.0729,-0.20279 0.10912,-0.36658 0.10912,-0.49138 0,-0.20278 -0.0656,-0.35877 -0.19647,-0.46796 -0.11645,-0.1248 -0.26203,-0.1872 -0.43672,-0.1872 -0.24747,0 -0.50224,0.11698 -0.76428,0.35099 -0.26203,0.21838 -0.48039,0.57716 -0.65508,1.07633 l -1.44119,5.00729 c -0.0582,0.17159 -0.0874,0.33538 -0.0874,0.49137 0,0.18719 0.0365,0.34318 0.10913,0.46797 0.0727,0.1092 0.17469,0.22618 0.30571,0.35098 0.10178,0.0936 0.17468,0.1794 0.21824,0.25738 0.0436,0.078 0.0509,0.17159 0.0229,0.28079 -0.0582,0.20278 -0.19647,0.35098 -0.41487,0.44457 -0.21848,0.0936 -0.56048,0.14039 -1.02632,0.14039 h -4.97864 c -0.37849,0 -0.64779,-0.0624 -0.80792,-0.18719 -0.1747,-0.14039 -0.24021,-0.31978 -0.19648,-0.53816 0.0582,-0.18719 0.21115,-0.35099 0.45858,-0.49138 0.21847,-0.12479 0.40032,-0.27298 0.54589,-0.44457 0.14558,-0.17159 0.26933,-0.44457 0.37123,-0.81895 l 1.94341,-6.76218 c 0.0291,-0.078 0.0436,-0.18719 0.0436,-0.32758 0,-0.17159 -0.0365,-0.30418 -0.10912,-0.39778 -0.0582,-0.0936 -0.16003,-0.21057 -0.30571,-0.35098 -0.14558,-0.12479 -0.24748,-0.23398 -0.30571,-0.32757 -0.0582,-0.0936 -0.0656,-0.21839 -0.0229,-0.37438 0.0874,-0.35878 0.54592,-0.67076 1.37569,-0.93594 0.82977,-0.28078 1.69593,-0.42118 2.59849,-0.42118 0.71332,0 1.27379,0.2106 1.6814,0.63176 0.42216,0.42118 0.62597,0.99834 0.61141,1.7315 0.59686,-0.88915 1.22282,-1.50531 1.87791,-1.84849 0.66964,-0.34318 1.39022,-0.51477 2.16177,-0.51477 0.84433,0 1.52853,0.26519 2.0526,0.79556 0.53862,0.51476 0.83706,1.19332 0.89529,2.03567 0.62597,-1.06073 1.29561,-1.79389 2.00893,-2.19947 0.71331,-0.42117 1.49212,-0.63176 2.33646,-0.63176 0.888,0 1.60131,0.28858 2.13994,0.86575 0.55318,0.57716 0.82977,1.32592 0.82977,2.24626 0,0.48357 -0.0727,0.95934 -0.21825,1.42731 z"
       fill="#101010"
       id="path6"
       style="display:inline;mix-blend-mode:difference;fill:#9356dc;fill-opacity:1;stroke-width:0.627952;stroke-miterlimit:4;stroke-dasharray:none" />
    <path
       d="m 147.89325,112.71112 c 0.64053,0 1.15004,0.28079 1.52854,0.84235 0.39305,0.54597 0.58956,1.29472 0.58956,2.24627 0,0.82674 -0.13824,1.71589 -0.41487,2.66743 -0.53863,1.91868 -1.40481,3.72817 -2.59852,5.42846 -1.17915,1.7003 -2.54056,3.06522 -4.08365,4.09475 -1.52852,1.02954 -3.05701,1.54431 -4.58554,1.54431 -0.75699,0 -1.41212,-0.14039 -1.9653,-0.42117 -0.53862,-0.28079 -0.94624,-0.65516 -1.22283,-1.12314 -0.29115,-0.46797 -0.43672,-0.96714 -0.43672,-1.4975 0,-0.23399 0.0365,-0.49138 0.10912,-0.77216 0.13113,-0.43677 0.34938,-0.77215 0.65509,-1.00614 0.3057,-0.23398 0.66971,-0.35097 1.09187,-0.35097 0.66965,0 1.21549,0.24177 1.63766,0.72535 0.43672,0.49917 0.71336,1.17773 0.82982,2.03568 0.93167,-0.0468 1.79052,-0.47577 2.57662,-1.28692 -0.74243,-0.14039 -1.29561,-0.40558 -1.65955,-0.79555 -0.34938,-0.40558 -0.58959,-1.02954 -0.7206,-1.87189 l -0.87345,-5.73265 c -0.0436,-0.29638 -0.10912,-0.49917 -0.19647,-0.60836 -0.0727,-0.12479 -0.17469,-0.18719 -0.30566,-0.18719 -0.10178,0 -0.22581,0.0546 -0.37127,0.1638 -0.13113,0.1092 -0.22558,0.16381 -0.28386,0.16381 -0.11646,0 -0.17469,-0.13261 -0.17469,-0.39778 0,-0.21838 0.0365,-0.45237 0.10913,-0.70196 0.26203,-0.88914 0.74976,-1.63789 1.46307,-2.24626 0.71332,-0.62396 1.54305,-0.93594 2.48928,-0.93594 0.93168,0 1.61587,0.29638 2.0526,0.88915 0.45128,0.59276 0.74247,1.5053 0.87349,2.73763 l 0.65504,5.14768 c 0.0438,0.38997 0.17469,0.58496 0.39335,0.58496 0.26203,0 0.56774,-0.24958 0.91712,-0.74875 0.34938,-0.51477 0.69147,-1.24012 1.02629,-2.17607 -0.43673,-0.42117 -0.77155,-0.90474 -1.00447,-1.45071 -0.23292,-0.54596 -0.34937,-1.13093 -0.34937,-1.75489 0,-0.48357 0.0582,-0.92034 0.17468,-1.31032 0.17469,-0.62396 0.44402,-1.09193 0.80795,-1.40391 0.3785,-0.32758 0.80066,-0.49137 1.2665,-0.49137 z"
       fill="#101010"
       id="path8"
       style="display:inline;mix-blend-mode:difference;fill:#9356dc;fill-opacity:1;stroke-width:0.627882" />
    <path
       d="m 73.320264,210.07621 c 1.55764,0 2.72223,0.25738 3.49378,0.77215 0.7861,0.49917 1.17915,1.11533 1.17915,1.84849 0,0.59276 -0.23291,1.05293 -0.69875,1.38051 -0.45129,0.31198 -1.04814,0.46798 -1.79057,0.46798 -0.6842,0 -1.21556,-0.1794 -1.59405,-0.53817 -0.3785,-0.35878 -0.56774,-0.80336 -0.56774,-1.33372 0,-0.32758 0.0947,-0.67076 0.28388,-1.02954 -0.43672,0 -0.80066,0.11698 -1.09181,0.35098 -0.29114,0.21839 -0.5168,0.60056 -0.67693,1.14653 -0.0873,0.34318 -0.1309,0.66296 -0.1309,0.95934 0,0.37437 0.0582,0.67076 0.17469,0.88914 0.13113,0.20279 0.31299,0.30419 0.54592,0.30419 h 1.28831 c 0.75699,0 1.13548,0.24958 1.13548,0.74875 0,0.0624 -0.0137,0.15599 -0.0436,0.28078 -0.0874,0.34318 -0.2693,0.60057 -0.54589,0.77216 -0.26203,0.17159 -0.66238,0.25738 -1.201,0.25738 h -0.65531 l -2.16177,7.58113 c -0.0436,0.18719 -0.0656,0.35098 -0.0656,0.49137 0,0.20279 0.0365,0.36658 0.10912,0.49137 0.0727,0.1092 0.17469,0.21839 0.30571,0.32758 0.10179,0.1092 0.17469,0.20279 0.21848,0.28079 0.0436,0.0624 0.0509,0.1482 0.0229,0.25738 -0.0727,0.20279 -0.21825,0.35098 -0.43672,0.44457 -0.21825,0.0936 -0.55319,0.14039 -1.00447,0.14039 h -4.97864 c -0.37849,0 -0.65509,-0.0624 -0.82977,-0.18719 -0.17469,-0.14039 -0.23292,-0.31978 -0.17469,-0.53816 0.0582,-0.18719 0.21114,-0.35098 0.45857,-0.49137 0.21824,-0.12479 0.40031,-0.27298 0.54589,-0.44458 0.14557,-0.17158 0.26932,-0.44457 0.37123,-0.81895 l 1.70321,-5.99002 c 0.0727,-0.23399 0.10913,-0.47577 0.10913,-0.72536 0,-0.31198 -0.0656,-0.55377 -0.19647,-0.72535 -0.11646,-0.1872 -0.29844,-0.38998 -0.54592,-0.60837 -0.16001,-0.14039 -0.28385,-0.25738 -0.3712,-0.35098 -0.0727,-0.10919 -0.10912,-0.23398 -0.10912,-0.37437 -0.0137,-0.29638 0.08,-0.50697 0.28388,-0.63176 0.21825,-0.1248 0.62597,-0.18719 1.22282,-0.18719 h 0.5459 c -0.10202,-0.38998 -0.15291,-0.77996 -0.15291,-1.16993 0,-0.38998 0.0656,-0.79555 0.19647,-1.21673 0.27659,-0.79555 0.86618,-1.4663 1.76873,-2.01228 0.91713,-0.54596 2.27097,-0.81894 4.06153,-0.81894 z"
       fill="#101010"
       id="path10"
       style="display:inline;fill:#9356dc;fill-opacity:1;stroke-width:0.627882" />
    <path
       d="m 81.945524,214.9899 c 1.97981,0 3.43555,0.42897 4.36723,1.28693 0.94623,0.85794 1.41936,1.98108 1.41936,3.36939 0,0.46797 -0.0582,0.99054 -0.17469,1.5677 -0.27659,1.27913 -0.79339,2.40225 -1.55037,3.3694 -0.75699,0.95154 -1.68867,1.69249 -2.79504,2.22286 -1.0918,0.51477 -2.27822,0.77215 -3.55927,0.77215 -2.02349,0 -3.52291,-0.42897 -4.49825,-1.28692 -0.96079,-0.87354 -1.44118,-2.02787 -1.44118,-3.46299 0,-0.48357 0.0582,-1.02174 0.17468,-1.6145 0.27659,-1.21672 0.80066,-2.29305 1.5722,-3.229 0.78611,-0.95154 1.73961,-1.6847 2.86053,-2.19946 1.13548,-0.53037 2.34375,-0.79556 3.6248,-0.79556 z m -0.0656,2.08248 c -0.30571,0 -0.63325,0.29638 -0.98264,0.88914 -0.33482,0.57717 -0.73514,1.6769 -1.20097,3.2992 -0.46584,1.6223 -0.69876,2.76103 -0.69876,3.41619 0,0.34318 0.0509,0.57716 0.15291,0.70196 0.10179,0.10919 0.24021,0.1638 0.4149,0.1638 0.3057,0.0312 0.61868,-0.24959 0.93894,-0.84235 0.33482,-0.59276 0.74972,-1.74709 1.24467,-3.46299 0.45128,-1.51311 0.67691,-2.61283 0.67691,-3.29919 0,-0.32758 -0.0509,-0.55377 -0.15291,-0.67856 -0.0874,-0.12479 -0.21825,-0.18719 -0.39305,-0.18719 z"
       fill="#101010"
       id="path12"
       style="display:inline;fill:#9356dc;fill-opacity:1;stroke-width:0.627882" />
    <path
       d="m 96.275504,214.9899 c 1.9798,0 3.43555,0.42897 4.367216,1.28693 0.94624,0.85794 1.41937,1.98108 1.41937,3.36939 0,0.46797 -0.0582,0.99054 -0.17469,1.5677 -0.27659,1.27913 -0.79339,2.40225 -1.55038,3.3694 -0.756986,0.95154 -1.688656,1.69249 -2.795026,2.22286 -1.0918,0.51477 -2.27822,0.77215 -3.55928,0.77215 -2.02348,0 -3.52289,-0.42897 -4.49824,-1.28692 -0.96079,-0.87354 -1.44119,-2.02787 -1.44119,-3.46299 0,-0.48357 0.0582,-1.02174 0.17469,-1.6145 0.27659,-1.21672 0.80066,-2.29305 1.5722,-3.229 0.7861,-0.95154 1.7396,-1.6847 2.86053,-2.19946 1.13548,-0.53037 2.34375,-0.79556 3.6248,-0.79556 z m -0.0656,2.08248 c -0.30571,0 -0.63326,0.29638 -0.98264,0.88914 -0.33482,0.57717 -0.73514,1.6769 -1.20098,3.2992 -0.46583,1.6223 -0.69875,2.76103 -0.69875,3.41619 0,0.34318 0.0509,0.57716 0.15291,0.70196 0.10178,0.10919 0.24021,0.1638 0.41489,0.1638 0.30571,0.0312 0.61868,-0.24959 0.93895,-0.84235 0.33482,-0.59276 0.74972,-1.74709 1.24467,-3.46299 0.45128,-1.51311 0.67691,-2.61283 0.67691,-3.29919 0,-0.32758 -0.0509,-0.55377 -0.15291,-0.67856 -0.0873,-0.12479 -0.21848,-0.18719 -0.39305,-0.18719 z"
       fill="#101010"
       id="path14"
       style="display:inline;fill:#9356dc;fill-opacity:1;stroke-width:0.627882" />
    <path
       d="m 114.36129,223.99835 c -0.0291,0.12479 -0.0436,0.21059 -0.0436,0.25738 0,0.1092 0.0291,0.19498 0.0873,0.25739 0.0582,0.0624 0.13113,0.0936 0.21848,0.0936 0.17469,0 0.32026,-0.078 0.43672,-0.23398 0.13091,-0.17159 0.21848,-0.25739 0.26204,-0.25739 0.0727,0 0.1309,0.0546 0.17468,0.16378 0.0436,0.10919 0.0656,0.23399 0.0656,0.37438 0.0137,0.42116 -0.13823,0.85014 -0.45856,1.28692 -0.30571,0.43677 -0.72059,0.79555 -1.24465,1.07633 -0.52407,0.28078 -1.09181,0.42118 -1.70323,0.42118 -0.72787,0 -1.36113,-0.14819 -1.89975,-0.44458 -0.53863,-0.29638 -0.90983,-0.68636 -1.11363,-1.16993 -0.39306,0.54598 -0.84433,0.95155 -1.35384,1.21672 -0.50951,0.26519 -1.04814,0.39779 -1.61588,0.39779 -0.66964,0 -1.29561,-0.1794 -1.87791,-0.53817 -0.56774,-0.35878 -1.02631,-0.86574 -1.37569,-1.52091 -0.33482,-0.67076 -0.50222,-1.42731 -0.50222,-2.26965 0,-1.41952 0.24747,-2.75324 0.74243,-4.00116 0.50952,-1.26352 1.21553,-2.27747 2.1181,-3.04182 0.90256,-0.77995 1.92887,-1.16993 3.07891,-1.16993 0.62596,0 1.1573,0.078 1.59402,0.23399 0.45128,0.15599 0.85889,0.38998 1.22283,0.70196 l 0.74243,-2.62063 c 0.0436,-0.1404 0.0656,-0.25739 0.0656,-0.35099 0,-0.17159 -0.0438,-0.31198 -0.13114,-0.42117 -0.0727,-0.1092 -0.17469,-0.21838 -0.3057,-0.32758 -0.14558,-0.1248 -0.25477,-0.23399 -0.32756,-0.32758 -0.0582,-0.0936 -0.0656,-0.21839 -0.0229,-0.37438 0.0874,-0.35877 0.5459,-0.67076 1.37567,-0.93595 0.82978,-0.26518 1.69596,-0.39777 2.59852,-0.39777 0.84433,0 1.46301,0.17159 1.85606,0.51477 0.40761,0.34318 0.61141,0.81115 0.61141,1.40391 0,0.34318 -0.0509,0.67856 -0.15291,1.00614 z m -3.64662,-6.57499 c -0.23292,-0.21839 -0.48769,-0.32759 -0.76428,-0.32759 -0.42217,0 -0.83704,0.33539 -1.24465,1.00615 -0.40761,0.67075 -0.73516,1.4819 -0.98264,2.43344 -0.24747,0.95155 -0.36393,1.80949 -0.34937,2.57385 0,0.85795 0.26203,1.28692 0.7861,1.28692 0.18936,0 0.34938,-0.078 0.48039,-0.23399 0.1309,-0.17159 0.25477,-0.44457 0.37122,-0.81895 z"
       fill="#101010"
       id="path16"
       style="display:inline;fill:#9356dc;fill-opacity:1;stroke-width:0.627882" />
    <path
       style="fill:#9356dc;fill-opacity:1;stroke:#800080;stroke-width:6.32261"
       d="m 467.78633,472.39572 c -8.08033,-1.58318 -9.72932,-8.26645 -5,-20.26484 3.62911,-9.2071 3.67877,-12.85714 0.17493,-12.85714 -3.88751,0 -5.24344,2.25821 -8.87323,14.77776 -2.51909,8.68862 -2.88871,11.78333 -1.64517,13.77455 0.88214,1.41253 1.21315,2.95897 0.73559,3.43653 -1.07328,1.07328 -26.1064,1.16549 -26.1064,0.0962 0,-0.42467 1.23236,-2.51396 2.73857,-4.64286 4.22258,-5.96823 10.62982,-30.10481 8.63091,-32.51335 -2.28458,-2.75275 -0.66822,-4.5962 5.70393,-6.50534 7.34412,-2.20036 12.64406,-0.76084 13.77399,3.74116 1.11565,4.4451 2.09904,4.44512 6.27491,1.1e-4 3.97872,-4.23516 11.36207,-5.93353 15.70066,-3.61159 1.71811,0.91951 3.95733,3.65414 4.97605,6.07697 1.83609,4.36677 1.86698,4.37757 3.54635,1.23964 2.07953,-3.88564 9.73049,-8.71433 13.81912,-8.72155 1.66189,-0.003 4.71546,1.32703 6.78571,2.95549 4.64853,3.65653 4.83916,8.28892 0.90694,22.03917 -3.42238,11.96745 -3.4327,12.14286 -0.71428,12.14286 2.98792,0 2.67144,2.32855 -0.78644,5.78644 -2.34365,2.34365 -4.40496,2.84346 -10.31026,2.5 -6.32667,-0.36798 -7.69121,-0.98404 -9.55292,-4.31297 -1.99309,-3.56385 -1.90945,-4.68144 1.01563,-13.57143 4.47964,-13.61461 4.48858,-13.97347 0.34827,-13.97347 -3.11874,0 -3.97244,1.17699 -6.73514,9.28571 -3.80824,11.17748 -4.11295,14.91684 -1.122,13.76911 3.26615,-1.25334 2.57618,2.48151 -1.07143,5.79972 -3.41176,3.10366 -8.51076,4.47471 -13.21429,3.55315 z"
       id="path3172"
       transform="scale(0.26458333)" />
    <path
       style="fill:#9356dc;fill-opacity:1;stroke:#800080;stroke-width:6.32261"
       d="m 518.50062,488.33034 c -4.17461,-1.65365 -8.57143,-6.74113 -8.57143,-9.91786 0,-3.63122 3.45493,-7.71017 6.53061,-7.71017 2.68584,0 7.75511,5.13597 7.75511,7.85715 0,2.96943 4.73188,2.68205 8.69631,-0.52815 l 3.29855,-2.67101 -3.1418,-0.99717 c -4.31423,-1.36928 -5.44001,-4.00354 -7.36444,-17.23225 -2.13767,-14.69462 -2.6819,-16.42857 -5.15632,-16.42857 -2.5686,0 -2.55637,-0.58464 0.12045,-5.76104 2.46172,-4.76045 9.43526,-8.91416 13.85776,-8.25422 5.31322,0.79286 8.156,6.77936 10.04727,21.15812 2.01807,15.34283 4.08672,17.26291 8.90773,8.26796 2.72641,-5.0869 2.74111,-5.47509 0.35992,-9.50613 -6.30687,-10.67668 1.13835,-25.11336 9.1924,-17.82455 2.45139,2.21848 2.81313,3.96861 2.34378,11.33959 -1.36418,21.42407 -21.91297,46.23405 -40.16317,48.49179 -2.51343,0.31093 -5.53416,0.18336 -6.71273,-0.28349 z"
       id="path3174"
       transform="scale(0.26458333)" />
    <path
       style="fill:#9356dc;fill-opacity:1;stroke:#800080;stroke-width:6.32261"
       d="m 396.0839,857.83146 c -5.17426,-2.0842 -7.88856,-7.73831 -7.78723,-16.22141 0.11898,-9.96142 3.54118,-18.35041 9.68721,-23.74669 4.02642,-3.53525 6.15361,-4.3039 11.91071,-4.3039 3.85486,0 7.40615,0.64285 7.89174,1.42857 1.77,2.86392 3.26768,1.28785 4.88691,-5.14269 1.2716,-5.04999 1.25874,-7.04833 -0.0556,-8.63198 -2.4004,-2.8923 -0.0177,-4.85203 7.05226,-5.80031 7.61464,-1.02134 12.72035,0.3623 13.7916,3.7375 0.47609,1.50003 -2.0525,12.89325 -5.61908,25.31827 -3.56658,12.42502 -6.48469,23.08909 -6.48469,23.69793 0,0.60885 1.03307,1.10699 2.2957,1.10699 1.50646,0 1.99759,0.77686 1.42857,2.2597 -0.47692,1.24283 -0.86712,2.51204 -0.86712,2.82045 0,1.15773 -8.53766,4.91985 -11.16498,4.91985 -1.50448,0 -4.38904,-1.30073 -6.41012,-2.89051 l -3.67468,-2.89051 -4.73226,2.88517 c -5.13165,3.12868 -7.33567,3.39238 -12.14897,1.45357 z m 14.96086,-10.34343 c 0.80597,-0.98215 2.92827,-7.14098 4.71623,-13.68629 2.72767,-9.98542 2.93003,-12.09885 1.25743,-13.13257 -4.47766,-2.76735 -11.29175,9.33808 -11.34357,20.15219 -0.0395,8.24626 1.99792,10.7757 5.36991,6.66667 z"
       id="path3176"
       transform="scale(0.26458333)" />
    <path
       style="fill:#9356dc;fill-opacity:1;stroke:#800080;stroke-width:6.32261"
       d="m 343.50007,857.29386 c -8.12313,-3.54022 -11.27652,-10.90027 -9.08089,-21.19489 2.78226,-13.04512 15.40872,-22.55774 29.88962,-22.51845 8.98444,0.0244 13.43337,1.93788 17.62239,7.57948 5.44998,7.33982 2.2391,22.37024 -6.52533,30.54556 -7.59374,7.08332 -22.48917,9.69226 -31.90579,5.5883 z m 17.85934,-13.35244 c 3.41841,-9.13653 5.06439,-19.14507 3.7233,-22.63991 -0.86187,-2.24598 -1.12816,-2.23497 -3.76998,0.15584 -4.92846,4.4602 -10.74071,27.98303 -7.67244,31.05129 2.04039,2.0404 4.96459,-1.20508 7.71912,-8.56722 z"
       id="path3178"
       transform="scale(0.26458333)" />
    <path
       style="fill:#9356dc;fill-opacity:1;stroke:#800080;stroke-width:6.32261"
       d="m 289.04105,857.221 c -6.46367,-2.81315 -9.11569,-7.41347 -9.08836,-15.76512 0.03,-9.17246 4.38201,-17.05298 12.61168,-22.83701 5.61571,-3.94686 7.21001,-4.34513 17.39408,-4.34513 10.41665,0 11.51735,0.29283 15.52181,4.12935 5.32538,5.10203 6.4975,10.00035 4.39296,18.35824 -2.06682,8.20809 -8.81319,16.42089 -16.27154,19.80839 -6.82651,3.10053 -18.23779,3.40313 -24.56063,0.65128 z m 17.26165,-11.08337 c 4.1238,-10.30638 6.53898,-22.93302 4.78971,-25.04076 -1.292,-1.55677 -2.04786,-1.46536 -4.23265,0.51185 -4.63005,4.19013 -10.41158,27.99353 -7.50519,30.89992 1.82385,1.82386 4.73856,-0.84875 6.94813,-6.37101 z"
       id="path3180"
       transform="scale(0.26458333)" />
    <path
       style="fill:#9356dc;fill-opacity:1;stroke:#800080;stroke-width:6.32261"
       d=""
       id="path3182"
       transform="scale(0.26458333)" />
    <path
       style="fill:#9356dc;fill-opacity:1;stroke:#800080;stroke-width:6.32261"
       d="m 241.61044,858.2928 c -1.44193,-0.57623 -1.22339,-1.48114 0.92151,-3.81579 1.54644,-1.68322 4.57689,-9.33827 6.73435,-17.0112 3.65095,-12.98452 3.76028,-14.1302 1.57848,-16.54106 -3.35605,-3.70839 -2.89539,-5.93672 1.22727,-5.93672 3.18484,0 3.57143,-0.58939 3.57143,-5.44492 0,-9.61114 7.09173,-14.55508 20.87823,-14.55508 13.60438,0 21.95706,7.37816 14.85927,13.12561 -5.902,4.77915 -12.88036,2.22779 -12.88036,-4.7092 0,-5.59534 -4.11391,-5.18485 -6.93038,0.69152 -2.76741,5.77401 -0.30844,10.89207 5.23309,10.89207 2.24303,0 4.50124,0.42299 5.01823,0.93998 1.57985,1.57985 -2.04825,4.7743 -5.42242,4.7743 -2.82236,0 -3.69404,1.78324 -7.74655,15.84754 -3.68161,12.77707 -4.22569,16.258 -2.80816,17.96603 1.40703,1.69536 1.34854,2.37769 -0.29281,3.41629 -2.16414,1.36941 -20.71757,1.64888 -23.94118,0.36063 z"
       id="path3186"
       transform="scale(0.26458333)" />
    <path
       style="fill:#9356dc;fill-opacity:1;stroke:#800080;stroke-width:6.32261"
       d="m 243.4219,472.03335 c -15.47833,-4.49845 -15.70056,-27.39664 -0.37364,-38.4994 12.18337,-8.82559 30.09091,-8.1833 36.47377,1.3082 1.79537,2.66976 3.26072,6.5269 3.25634,8.57142 -0.0422,19.70901 -20.02275,34.23871 -39.35647,28.61978 z m 16.77195,-17.75961 c 4.17484,-12.34412 4.93172,-18.55427 2.44839,-20.08905 -0.86497,-0.53458 -2.73846,0.23105 -4.16331,1.7014 -3.00261,3.09848 -8.54974,20.28839 -8.54974,26.49463 0,3.56922 0.50277,4.16287 3.19973,3.77809 2.60708,-0.37194 3.91564,-2.57329 7.06493,-11.88507 z"
       id="path3188"
       transform="scale(0.26458333)" />
    <path
       style="fill:#9356dc;fill-opacity:1;stroke:#800080;stroke-width:6.32261"
       d="m 316.71491,471.38438 c -5.36687,-3.00803 -5.59478,-7.75825 -0.97773,-20.37851 1.51989,-4.15448 2.76344,-8.49376 2.76344,-9.64286 0,-3.24979 -5.41453,-2.45761 -7.68945,1.12502 -3.27305,5.15452 -7.86455,23.31138 -6.45694,25.53365 2.35519,3.71829 1.25472,4.1092 -11.5679,4.1092 -7.07142,0 -12.85714,-0.43152 -12.85714,-0.95894 0,-0.52742 0.91418,-1.97384 2.03151,-3.21428 1.11733,-1.24044 5.05464,-12.82102 8.74958,-25.73463 5.5717,-19.47278 6.42388,-23.95034 4.99406,-26.23985 -2.27542,-3.64352 -0.46259,-5.32981 7.24496,-6.73924 6.81521,-1.24625 12.31912,0.2473 13.6451,3.70276 0.48274,1.25799 -0.17659,6.07936 -1.46518,10.71415 -3.20416,11.52472 -2.98574,12.47762 1.80744,7.88546 7.29085,-6.98508 18.47629,-4.79172 20.69758,4.0586 0.45053,1.79506 -0.70458,8.5048 -2.5669,14.91053 -3.13662,10.78882 -2.96243,14.51668 0.57614,12.32973 2.59234,-1.60215 1.4866,1.91675 -1.78572,5.68285 -4.00844,4.61332 -11.71661,5.89766 -17.14285,2.85636 z"
       id="path3190"
       transform="scale(0.26458333)" />
  </g>
  <script
     id="mesh_polyfill"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script>
</svg>
